The first thing is to setup the config data

    -> git config --global user.email "email@example.com"
    -> git config --global user.name "name"



Understanding Git environments

    There are three environments in Git

        -> Working area 
        -> Staging area
        -> Commit 


git add . / git add Filename        : is used to move files/changes from working area to staging area.

git commit -m "Commit Message"      : is used to move files/changes from staging area into the repository.





Why ignore files

    -> Could contain sensitive data.
    -> Personal Notes 
    -> System files



    Steps in ignoring a files

        -> Create the file to be ignored.
        -> Create a .gitignore file
        -> Add the name of the file or type of files that you want to ignore inside the .gitignore file.
        -> Save it and push it.






Deleting and Renaming files

    Delete it normally or use git bash : git rm filename.

    To undo use git restore commands.

    Renaming using git mv current_name new_name




Differences

    
git diff is the command. We use it to compare between files..







Changing history





Branches

    -> New branch : git branch branch_name / git checkout -b branch_name (old standard)

    -> Change between branches : git checkout branch_name (for already created branches) / git checkout -b branch_name (old standard)

    -> Deleting a branch : git branch -d branch_name

    -> 




Merging

    -> git branch branch_name will merge our current branch with the branch with name branch_name

    -> 







Stashing and cleaning

    -> Stashing is a way for putting away code temporarily so that we can work on something else.

    -> git stash command will store the changes away in a storage.
    -> git stash list is the command to view all changes which have been stored already
    -> git stash apply
    -> git stash pop





Git Flow & Trunk based development


Steps in Gitflow

    ->  Feature/Fix branch is created
    -> Make the required changes in this branch
    -> Merge to the parent branch
    -> Delete the feature/fix branch





